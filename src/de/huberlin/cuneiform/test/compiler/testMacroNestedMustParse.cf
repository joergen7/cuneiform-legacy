declare testMacroNestedMustParse;

deftask samtools-view( bam : sam ) *{
    bam=alignment.bam
    samtools view -bS $sam > $bam
}*

deftask samtools-mpileup( mpileup : sortedbam fa ) *{
    mpileup=alignment.mpileup
    samtools mpileup -f $fa $sortedbam > $mpileup
}*

deftask samtools-merge( mergedbam : <sortedbam> ) *{
    mergedbam=alignment-merged.bam
    samtools merge -f $mergedbam ${sortedbam[@]}
}*

deftask varscan( vcf : mpileup ) *{
    vcf=variant.vcf
    java net.sf.varscan.VarScan mpileup2snp $mpileup --output-vcf --p-value 99e-02 > $vcf
}*

deftask bowtie-align( sam : [task idx] fastq ) *{
    sam=bowtie-alignment.sam
    tar xf $idx
    bowtie -C -t --sam --threads 8 bowtie-index $fastq $sam
}*

deftask shrimp-align( sam : [task idx] fastq ) *{
    sam=shrimp-alignment.sam
    tar xf $idx
    gmapper-cs $fastq -N 8 --load shrimp-index > $sam
}*

deftask perm-align( sam : [task idx] fastq ) *{
    sam=perm-alignment.sam
    perm $idx $fastq --readFormat csfastq -v 5 -o $sam -k 10
}*


defmacro snp-call( fastq fa idx )
    samtools-view(
        sam : apply(
            task  : bowtie-align shrimp-align perm-align
            idx   : idx
            fastq : fastq
        )
        
    );

caco-fastq = 'blub';
idx = 'bla';
fa = 'x';

caco-vcf = snp-call(
    fastq : caco-fastq
    fa    : fa
    idx   : idx
);

target caco-vcf;