declare common;

# Arithmetics

deftask + in python( ~result : ~<operand> ) *{

    result = 0
    for x in operand:
        result += float( x )
}*

deftask - in python( ~result : ~<operand> ) *{

    result = operand[0]
    for x in operand[1:]:
        result -= float( x )
}*

deftask * in python( ~result : ~<operand> ) *{

    result = 1
    for x in operand:
        result *= float( x )
}*

deftask / in python( ~result : ~<operand> ) *{

    result = operand[0]
    for x in operand[1:]:
        result /= float( x )
}*

deftask sqrt in python( ~result : ~operand ) *{

    import math
    $result = math.sqrt( $operand )
}*

# Boolean logic

deftask and in python( ~result : ~<operand> ) *{

    $result = "nil"

    for line in $operand:
        $result = line
        if line is "nil":
            break
}*

deftask or in python( ~result : ~<operand> ) *{

    $result = "nil"

    for line in $operand:
        $result = line
        if not line is "nil":
            break
}*

deftask not in python( ~result : ~operand ) *{

    if $operand is "nil":
        $result = "t"
    else:
        $result = "nil"
}*


# Conditionals

deftask if in python( <result> : ~cond <then> <else> ) *{

    if cond is "nil":
        $result = $else
    else:
        $result = $then
}*

